% lt_maths.sty
% Sam Harrison 2018
% MIT License: a full version of the license is included in the LICENSE file.

% For TeXShop, TeXWorks, etc
% !TEX encoding = UTF-8 Unicode
% !TEX spellcheck = en-GB

%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Package info {{{

% Requires at least LaTeX version 2e.
\NeedsTeXFormat{LaTeX2e}

\ProvidesPackage{lt_maths}[2018/09/05 Mathematics style and commands]

% }}}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Packages {{{

% Various improvements to math mode
\RequirePackage{amsmath}

% Better delimiter spacing with \mleft, \mright instead of \left, \right
\RequirePackage{mleftright}

% }}}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Set maths style and font {{{

% Has to be the last maths package loaded
% See https://tex.stackexchange.com/q/425098 for font examples
\RequirePackage[math-style=ISO, bold-style=ISO]{unicode-math}
    \setmathfont{Libertinus Math}
    \setmathfont{Latin Modern Math}[range=cal]
% N.B. \mathcal and \mathscr are essentially synonymous. However, by using the
% far less curly Latin Modern for \mathcal we can make them appear different.

% ISO Standard:
% https://www.iso.org/standard/31887.html
% https://nickhigham.wordpress.com/2016/01/28/typesetting-mathematics-according-to-the-iso-standard/
% In short:
% Italic: variables, generic functions (e.g. f(x))
% Roman: constants, fixed functions, operators (e.g., e,i,pi; sin,exp; +,d)

% Shorter aliases for bold
% \bs{ } for bold symbols (i.e. variables)
\newcommand{\bs}[1]{\symbf{#1}}
% \bt{ } for bold text (i.e. operators)
\newcommand{\bt}[1]{\mathbf{#1}}

% }}}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Operators {{{

% Note that operators work properly with sub/superscripts
% https://tex.stackexchange.com/a/34825

% Differentiation: \der{x} and \pder{x}
\newcommand{\der}[1]{\operatorname{d\!} {#1}}
% https://tex.stackexchange.com/a/17894A
% The {} are needed to force insertion of a thin space
\newcommand{\pder}[1]{\mathop{\kern0pt \partial\!} {#1}}
% Similar in spirit, but non-latin characters can be temperamental when
% changing to the operator font
% https://tex.stackexchange.com/a/41267
% https://tex.stackexchange.com/a/84308
% https://tex.stackexchange.com/q/410456
\newcommand{\del}{\mathop{\kern0pt \nabla\!} {}}
% del/nabla doesn't take an argument as we often want a subscript

% Useful functions
\DeclareMathOperator*{\argmin}{arg\,min}
\DeclareMathOperator*{\argmax}{arg\,max}
\DeclareMathOperator{\sign}{sign}
\DeclareMathOperator{\const}{const}

% Linear algebra
\DeclareMathOperator{\transpose}{T}
\DeclareMathOperator{\vecOp}{vec}
\DeclareMathOperator{\diag}{diag}
\DeclareMathOperator{\trace}{Tr}

% Stats
\DeclareMathOperator{\var}{Var}
\DeclareMathOperator{\cov}{cov}
\DeclareMathOperator{\corr}{corr}

% Greek letter functions - as with \pder{x}, the implied font switch can mean
% e.g. \DeclareMathOperator{\deltaFunc}{\delta} doesn't behave
\DeclareMathOperator{\deltaFunc}{\mupdelta}
\DeclareMathOperator{\gammaFunc}{\mupGamma}
\DeclareMathOperator{\psiFunc}{\muppsi}
\DeclareMathOperator{\digammaFunc}{\muppsi}

% Probability
\DeclareMathOperator{\E}{E}
\DeclareMathOperator{\KL}{D_{KL}}
\DeclareMathOperator{\FreeEnergy}{\symcal{F}}

% Distributions
\DeclareMathOperator{\betaDist}{\mupbeta}
\DeclareMathOperator{\deltaDist}{\mupdelta}
\DeclareMathOperator{\dirichletDist}{Dir}
\DeclareMathOperator{\gammaDist}{\mupGamma}
\DeclareMathOperator{\normalDist}{\symcal{N}}
\DeclareMathOperator{\matrixNormalDist}{\symcal{MN}}
\DeclareMathOperator{\wishartDist}{\symcal{W}}

% }}}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
% Commands {{{

% Function: something ( something )
\newcommand{\func}[2]{#1 ( #2 )}
\newcommand{\Func}[2]{#1 \bigl( #2 \bigr)}
\newcommand{\bigFunc}[2]{#1 \mleft( #2 \mright)}

% Determinant: | something |
\newcommand{\determinant}[1]{\lvert #1 \rvert}
\newcommand{\logdet}[1]{\Func{\ln}{\determinant{#1}}}

% Distribution: something ( something )
\newcommand{\dist}[2]{\func{#1}{#2}}
% Conditional distribution: something ( something | something )
\newcommand{\cDist}[3]{\func{#1}{#2 \vert #3}}
% Parameterised distribution: something ( something ; parameters )
\newcommand{\pDist}[3]{\func{#1}{#2 ; #3}}

% Expectation notation: < something >
%\newcommand{\expec}[1]{\bigl\langle #1 \bigr\rangle}
%\newcommand{\expecWRT}[2]{\bigl\langle #1 \bigr\rangle_{#2}}
\newcommand{\expec}[1]{\E \bigl[ #1 \bigr]}
\newcommand{\expecWRT}[2]{\E_{#2} \bigl[ #1 \bigr]}

% KL divergence: Dkl ( something || something )
\newcommand{\DKL}[2]{\Func{\KL}{#1 \,\big\Vert\, #2}}

% Useful specific overloads
\newcommand{\lnFunc}[1]{\Func{\ln}{#1}}

% }}}
%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%%
